%
%
% Works with rossbyFloat.m to run a set of sims for different float
% compressibilites.
%
% Revision History
% 2022-07-27    mvj    Created.

clear

% Float compressibilities to run.  This is the float only, not the compressee.  The design for the compressee is
% fixed assuming a certain float compressibility and defined in rossbyFloat.m
% 2022-07-27 Can be surprisingly high and still stable.  Unstable at 10.
CFs = 1e-6*1e-4*[ 2.8890; ...
    2.9450; ...
    3.1620; ...
    2.8610; ...
    3.0360; ...
    2.8830; ...
    3.1420; ...
    3.0640; ...
    3.0760; ...
    3.1030; ...
    2.9550; ...
    3.0220; ...
    2.9970; ...
    2.9940; ...
    2.8440; ...
    2.9890; ...
    2.8790; ...
    2.9210; ...
    3.0050; ...
    2.9520; ...
    2.9300; ...
    2.9120; ...
    2.9010; ...
    2.9450; ...
    2.9330; ...
    2.9830; ...
    2.8020; ...
    2.9520; ...
    2.8980; ...
    2.8580; ...
    2.8210; ...
    2.9850; ...
    2.9820; ...
    2.8670];



% Assign variable in root workspace.
N = length(CFs);
for nn=1:N
    assignin('base','CF',CFs(nn));

    % capture parameters.
    [s.prm] = bgcParam;
    s.CF = CFs(nn); % rundundant but buried in prm struct.
    
    % run sim
    bgc;

    % capture output
    s.tout = tout;
    s.yout = yout;
    s.Zbuoyancy = Zbuoyancy;
    s.Zdrag = Zdrag;
    s.Zthrust = Zthrust;
    s.rho = rho;
    s.theta = theta;
    s.p = p;
    s.mf = mf;
    s.Vf = Vf;
    s.thetaf = thetaf;
    s.alphaf = alphaf;
    s.chif = chif;
    s.cpf = cpf;
    s.Re = Re;
    s.zg = zg;
    s.S = S;
    simOutput{nn} = s;

    disp(sprintf('%d/%d',nn,N));
    %disp('Paused.  Press any key to continue.'); pause;

    save /tmp/simOutput.mat simOutput
    
end

disp('Output saved to /tmp/simOutput.mat.  Archive manually.');
